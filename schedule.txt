
January
--------------------------------------------
11
18 due: Int and Exp (1 week)
25

February
--------------------------------------------
1 due: Register alloc (2 weeks)
8 due: Control Flow (1 week)
15
22 due: Tuples and GC (2 weeks)
29

March
--------------------------------------------
7 due: Functions (2 weeks)
  9  Midterm Exam 

14 Spring Break
21 due: Lambda (1 week)
28 Lecture topic: inlining
30 Lecture topic: polymorphism

April
---------------------------------------------
4 due: Type Dynamic, Dynamic Typing (2 weeks)
  Lecture topic: expose basic blocks

6 Lecture topic: objects

11 Lecture topic: tail call opt. (Michael)
13 Lecture topic: set! (Chris)




Student Projects

  ideas:
  * basic blocks and optimize jumps
  * continuations, exceptions
  * high-level optimizations like procedure inlining, etc.
  * alternative back ends (ARM, LLVM)
  * lazy evaluation
  * gradual typing
  * self hosting
  * tail call optimization (Michael lecture April 11)
  * I/O
  * foreign function interface
  * quasi-quote and unquote
  * macros (perhaps too difficult?)
  * alternative garbage collector
  * alternative register allocator
  * parametric polymorphism
  * type classes (perhaps too difficulty?)
  * loops and loop optimization
  * object-oriented features


25 projects due
25-29: Student Presentations
